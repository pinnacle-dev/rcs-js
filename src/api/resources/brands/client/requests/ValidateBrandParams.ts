/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Pinnacle from "../../../../index.js";

/**
 * @example
 *     {
 *         address: "500 Folsom St, San Francisco, CA 94105",
 *         contact: {
 *             email: "michael.chen@trypinnacle.app",
 *             name: "Michael Chen",
 *             phone: "+14155551234",
 *             title: "Customer Support Representative"
 *         },
 *         dba: "Pinnacle Messaging",
 *         description: "Pinnacle is an SMS, MMS, and RCS API for scaling conversations with customers you value.",
 *         ein: "88-1234567",
 *         email: "founders@trypinnacle.app",
 *         name: "Pinnacle",
 *         sector: "TECHNOLOGY",
 *         type: "PRIVATE_PROFIT",
 *         website: "https://www.pinnacle.sh"
 *     }
 */
export interface ValidateBrandParams {
    /** Primary brand address where the brand is located. */
    address: string;
    /** Contact information for the primary brand representative. */
    contact: ValidateBrandParams.Contact;
    /** "Doing Business As" name - the public name the brand operates under. */
    dba?: string | null;
    /** Brief description of what the brand does. */
    description: string;
    /** Employer Identification Number (EIN) assigned by the IRS. */
    ein?: string;
    /** Main contact email address for the brand. */
    email: string;
    /** Legal name of the brand as registered. */
    name: string;
    sector: Pinnacle.CompanySectorEnum;
    type: Pinnacle.CompanyTypeEnum;
    /** Brand website URL. */
    website: string;
}

export namespace ValidateBrandParams {
    /**
     * Contact information for the primary brand representative.
     */
    export interface Contact {
        /** Email address of the contact person. */
        email: string;
        /** Full name of the contact person. */
        name: string;
        /** Phone number of the contact person in E.164 format. */
        phone: string;
        /** Job title or position of the contact person. */
        title: string;
    }
}
