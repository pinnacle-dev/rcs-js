/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Pinnacle from "../../../../../../index.js";

/**
 * @example
 *     {
 *         brand: 2,
 *         campaignId: 161,
 *         monthlyVolume: "1,000",
 *         name: "Pinnacle",
 *         optIn: {
 *             method: "DIGITAL",
 *             url: "https://www.pinnacle.sh/",
 *             workflowDescription: "Visit https://www.pinnacle.sh/"
 *         },
 *         productionMessageContent: "Join Pinnacle's workshop tomorrow and send your first RCS!",
 *         useCase: {
 *             summary: "Alerts clients about any Pinnacle hosted workshops.",
 *             value: "WORKSHOP_ALERTS"
 *         }
 *     }
 */
export interface UpsertTollFreeCampaignParams {
    /** Brand id. */
    brand?: number;
    /** Unique identifier for the campaign. */
    campaignId?: number;
    monthlyVolume?: Pinnacle.MessageVolumeEnum;
    /** Display name of the campaign. */
    name?: string;
    /** Opt-in keyword settings. */
    optIn?: UpsertTollFreeCampaignParams.OptIn;
    /** Explain message that would be sent. */
    productionMessageContent?: string;
    /** Use case classification for the campaign. */
    useCase?: UpsertTollFreeCampaignParams.UseCase;
}

export namespace UpsertTollFreeCampaignParams {
    /**
     * Opt-in keyword settings.
     */
    export interface OptIn {
        method?: Pinnacle.OptInMethodEnum;
        /** Url to opt in. */
        url?: string;
        /** Explain how users find the opt-in. */
        workflowDescription?: string;
    }

    /**
     * Use case classification for the campaign.
     */
    export interface UseCase {
        /** Summary of the use case. */
        summary?: string;
        value?: Pinnacle.TollFreeCampaignUseCaseEnum;
    }
}
