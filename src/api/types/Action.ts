/**
 * This file was auto-generated by Fern from our API Definition.
 */

export interface Action {
    /** Title of the action (must be less than 25 characters). */
    title?: string;
    /** Type of action for the button. 'openUrl' opens a URL, 'call' dials a phone number, 'trigger' sends the predefined payload to the webhook when pressed, 'requestUserLocation' requests the user's location, 'scheduleEvent' creates a calendar event, 'sendLocation' sends a location. */
    type?: Action.Type;
    /** Optional payload associated with the action. This payload encodes the respective fields for the action type and is required. For 'openUrl', the payload is the URL to open. For 'call', the payload is the phone number to dial. For 'trigger', the payload is the predefined payload to send to the webhook. */
    payload?: string;
    /** Optional metadata. Only used for type 'trigger' ignored for other action types. When the user presses the action, the metadata is sent to the webhook alongside the payload. */
    metadata?: string;
    /** Start time for events in ISO 8601 format. For example, '2022-01-01T12:00:00Z'. Required for 'scheduleEvent'. */
    eventStartTime?: string;
    /** End time for events in ISO 8601 format. For example, '2022-01-01T12:00:00Z'. Required for 'scheduleEvent'. */
    eventEndTime?: string;
    /** Event title. Required for 'scheduleEvent'. */
    eventTitle?: string;
    /** Optional event description. */
    eventDescription?: string;
    /** Latitude and longitude coordinates. Required for 'sendLocation'. */
    latLong?: Action.LatLong;
}

export namespace Action {
    /**
     * Type of action for the button. 'openUrl' opens a URL, 'call' dials a phone number, 'trigger' sends the predefined payload to the webhook when pressed, 'requestUserLocation' requests the user's location, 'scheduleEvent' creates a calendar event, 'sendLocation' sends a location.
     */
    export type Type = "openUrl" | "call" | "trigger" | "requestUserLocation" | "scheduleEvent" | "sendLocation";
    export const Type = {
        OpenUrl: "openUrl",
        Call: "call",
        Trigger: "trigger",
        RequestUserLocation: "requestUserLocation",
        ScheduleEvent: "scheduleEvent",
        SendLocation: "sendLocation",
    } as const;

    /**
     * Latitude and longitude coordinates. Required for 'sendLocation'.
     */
    export interface LatLong {
        /** Latitude value. */
        lat?: number;
        /** Longitude value. */
        lng?: number;
    }
}
