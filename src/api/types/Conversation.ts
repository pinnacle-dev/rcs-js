/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Pinnacle from "../index.js";

/**
 * Conversation that was found.
 */
export interface Conversation {
    /** Identifier for the brand associated with this conversation. */
    brandId: number | null;
    /** Campaign information if this conversation is part of a marketing campaign. */
    campaign: Pinnacle.CampaignQuery | null;
    /** Contact information for the recipient in a conversation. */
    contact: Conversation.Contact;
    /** ISO 8601 timestamp when the conversation was created. */
    createdAt: string;
    /** Unique identifier for the conversation. */
    id: number;
    /** Free-form notes or comments about the conversation. */
    notes: string;
    /**
     * The sender of messages in this conversation. Can be:
     * - A phone number with its capabilities and metadata
     * - An RCS agent with ID and name
     * - `null` if no sender is associated
     */
    sender: Conversation.Sender | null;
    /** ISO 8601 timestamp when the conversation was last updated. */
    updatedAt: string;
}

export namespace Conversation {
    /**
     * Contact information for the recipient in a conversation.
     */
    export interface Contact {
        /** Unique identifier for the contact. */
        id: number;
        /** The contact's phone number in E.164 format. */
        phoneNumber: string;
    }

    /**
     * The sender of messages in this conversation. Can be:
     * - A phone number with its capabilities and metadata
     * - An RCS agent with ID and name
     * - `null` if no sender is associated
     */
    export type Sender =
        /**
         * Information about a phone number sender in a conversation. */
        | {
              capabilities: Pinnacle.PhoneCapabilities;
              createdAt: string;
              isSandbox: boolean;
              phoneNumber: string;
              updatedAt: string;
          }
        /**
         * Information about an RCS agent sender in a conversation. */
        | {
              agentId: string;
              agentName: string;
          };
}
