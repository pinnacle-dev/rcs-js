/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as Pinnacle from "../index.js";

export interface ExtendedRcsCampaign {
    /** Agent configured to the campaign. */
    agent: ExtendedRcsCampaign.Agent;
    /** Agent's unique identifier. */
    agentId: string;
    /** Brand associated with this campaign. */
    brand: Pinnacle.ExtendedBrand;
    /** Link to document verifying the brand's name. This may be the certificate of incorporation, business license, or other relevant document. You can typically find this on the Secretary of State website. */
    brandVerificationUrl?: string;
    /** Indicates whether the brand has provided an attestation. */
    brandAttestation: boolean;
    /** Unique identifier for the campaign. */
    campaignId: number;
    /** List of what the agent might say to users. */
    expectedAgentResponses?: string[];
    /** Legal documentation links. */
    links: ExtendedRcsCampaign.Links;
    /** Opt-in configuration. */
    optIn: ExtendedRcsCampaign.OptIn;
    /** Opt-out configuration. */
    optOut: ExtendedRcsCampaign.OptOut;
    /** Use case classification for the campaign. */
    useCase: ExtendedRcsCampaign.UseCase;
}

export namespace ExtendedRcsCampaign {
    /**
     * Agent configured to the campaign.
     */
    export interface Agent {
        /** Color of the agent's buttons. */
        color?: string;
        /** Description of the agent. */
        description?: string;
        /** List of emails. */
        emails?: Agent.Emails.Item[];
        /** Link to the agent's hero. */
        heroUrl?: string;
        /** Link to the agent's icon. */
        iconUrl?: string;
        /** Name of the agent. */
        name?: string;
        /** List of phone numbers. */
        phones?: Agent.Phones.Item[];
        /** List of urls. */
        websites?: Agent.Websites.Item[];
    }

    export namespace Agent {
        export type Emails = Emails.Item[];

        export namespace Emails {
            export interface Item {
                /** Email attached to the agent. */
                email?: string;
                /** Label for the email. */
                label?: string;
            }
        }

        export type Phones = Phones.Item[];

        export namespace Phones {
            export interface Item {
                /** Label for the phone number. */
                label?: string;
                /** Phone number attached to the agent in E.164 format. */
                phone?: string;
            }
        }

        export type Websites = Websites.Item[];

        export namespace Websites {
            export interface Item {
                /** Label for the url. */
                label?: string;
                /** Url attached to the agent. */
                url?: string;
            }
        }
    }

    /**
     * Legal documentation links.
     */
    export interface Links {
        /** Privacy policy URL. */
        privacyPolicy?: string;
        /** Terms of service URL. */
        termsOfService?: string;
    }

    /**
     * Opt-in configuration.
     */
    export interface OptIn {
        method?: Pinnacle.RcsCampaignOptInMethodEnum;
        /** Message shown to users explaining what they are agreeing to when opting in. */
        termsAndConditions?: string;
    }

    /**
     * Opt-out configuration.
     */
    export interface OptOut {
        /** Description for the keyword. */
        description?: string;
        /** Keywords to opt-out. */
        keywords?: string[];
    }

    /**
     * Use case classification for the campaign.
     */
    export interface UseCase {
        /** Summary of the use case. */
        behavior?: string;
        value?: Pinnacle.RcsCampaignUseCaseEnum;
    }
}
