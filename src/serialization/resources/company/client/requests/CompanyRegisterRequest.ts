/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../../index";
import * as Pinnacle from "../../../../../api/index";
import * as core from "../../../../../core";
import { CompanyDetails } from "../../../../types/CompanyDetails";
import { CompanyContact } from "../../../../types/CompanyContact";
import { PointOfContact } from "../../../../types/PointOfContact";
import { Optionals } from "../../../../types/Optionals";

export const CompanyRegisterRequest: core.serialization.Schema<
    serializers.CompanyRegisterRequest.Raw,
    Pinnacle.CompanyRegisterRequest
> = core.serialization.object({
    company: CompanyDetails,
    companyContact: CompanyContact,
    pointOfContact: PointOfContact,
    optionals: Optionals.optional(),
});

export declare namespace CompanyRegisterRequest {
    interface Raw {
        company: CompanyDetails.Raw;
        companyContact: CompanyContact.Raw;
        pointOfContact: PointOfContact.Raw;
        optionals?: Optionals.Raw | null;
    }
}
