/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../../../index";
import * as Pinnacle from "../../../../api/index";
import * as core from "../../../../core";
import { CompanyDetails } from "../../../types/CompanyDetails";
import { CompanyContact } from "../../../types/CompanyContact";
import { Messaging } from "../../../types/Messaging";
import { PointOfContact } from "../../../types/PointOfContact";
import { Optionals } from "../../../types/Optionals";

export const CompanyRegisterRequestCompany: core.serialization.ObjectSchema<
    serializers.CompanyRegisterRequestCompany.Raw,
    Pinnacle.CompanyRegisterRequestCompany
> = core.serialization.object({
    company: CompanyDetails,
    companyContact: CompanyContact,
    messaging: Messaging,
    pointOfContact: PointOfContact,
    optionals: Optionals.optional(),
});

export declare namespace CompanyRegisterRequestCompany {
    interface Raw {
        company: CompanyDetails.Raw;
        companyContact: CompanyContact.Raw;
        messaging: Messaging.Raw;
        pointOfContact: PointOfContact.Raw;
        optionals?: Optionals.Raw | null;
    }
}
