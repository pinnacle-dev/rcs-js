/**
 * This file was auto-generated by Fern from our API Definition.
 */

import * as serializers from "../index";
import * as Pinnacle from "../../api/index";
import * as core from "../../core";
import { CompanyCategory } from "./CompanyCategory";
import { CompanyAdditionalWebsitesItem } from "./CompanyAdditionalWebsitesItem";
import { CompanyAdditionalEmailsItem } from "./CompanyAdditionalEmailsItem";
import { CompanyAdditionalPhoneNumbersItem } from "./CompanyAdditionalPhoneNumbersItem";

export const Company: core.serialization.ObjectSchema<serializers.Company.Raw, Pinnacle.Company> =
    core.serialization.object({
        id: core.serialization.number().optional(),
        createdAt: core.serialization.date().optional(),
        name: core.serialization.string().optional(),
        category: CompanyCategory.optional(),
        address: core.serialization.string().optional(),
        ein: core.serialization.string().optional(),
        description: core.serialization.string().optional(),
        brandColor: core.serialization.string().optional(),
        logoUrl: core.serialization.string().optional(),
        heroUrl: core.serialization.string().optional(),
        primaryWebsiteUrl: core.serialization.string().optional(),
        primaryWebsiteLabel: core.serialization.string().optional(),
        primaryPhone: core.serialization.string().optional(),
        primaryPhoneLabel: core.serialization.string().optional(),
        primaryEmail: core.serialization.string().optional(),
        primaryEmailLabel: core.serialization.string().optional(),
        privacyPolicyUrl: core.serialization.string().optional(),
        tosUrl: core.serialization.string().optional(),
        pocName: core.serialization.string().optional(),
        pocTitle: core.serialization.string().optional(),
        pocEmail: core.serialization.string().optional(),
        optIn: core.serialization.string().optional(),
        optOut: core.serialization.string().optional(),
        optOutKeywords: core.serialization.list(core.serialization.string()).optional(),
        agentUseCase: core.serialization.string().optional(),
        expectedAgentResponses: core.serialization.string().optional(),
        testNumbers: core.serialization.list(core.serialization.string()).optional(),
        status: core.serialization.string().optional(),
        additionalWebsites: core.serialization.list(CompanyAdditionalWebsitesItem).optional(),
        additionalEmails: core.serialization.list(CompanyAdditionalEmailsItem).optional(),
        additionalPhoneNumbers: core.serialization.list(CompanyAdditionalPhoneNumbersItem).optional(),
    });

export declare namespace Company {
    interface Raw {
        id?: number | null;
        createdAt?: string | null;
        name?: string | null;
        category?: CompanyCategory.Raw | null;
        address?: string | null;
        ein?: string | null;
        description?: string | null;
        brandColor?: string | null;
        logoUrl?: string | null;
        heroUrl?: string | null;
        primaryWebsiteUrl?: string | null;
        primaryWebsiteLabel?: string | null;
        primaryPhone?: string | null;
        primaryPhoneLabel?: string | null;
        primaryEmail?: string | null;
        primaryEmailLabel?: string | null;
        privacyPolicyUrl?: string | null;
        tosUrl?: string | null;
        pocName?: string | null;
        pocTitle?: string | null;
        pocEmail?: string | null;
        optIn?: string | null;
        optOut?: string | null;
        optOutKeywords?: string[] | null;
        agentUseCase?: string | null;
        expectedAgentResponses?: string | null;
        testNumbers?: string[] | null;
        status?: string | null;
        additionalWebsites?: CompanyAdditionalWebsitesItem.Raw[] | null;
        additionalEmails?: CompanyAdditionalEmailsItem.Raw[] | null;
        additionalPhoneNumbers?: CompanyAdditionalPhoneNumbersItem.Raw[] | null;
    }
}
