/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { PinnacleClient } from "../../../src/Client";

describe("Campaign", () => {
    test("attach", async () => {
        const server = mockServerPool.createServer();
        const client = new PinnacleClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            phones: ["+14155550123", "+14155559876", "+14155550111"],
            campaignType: "TOLL_FREE",
            campaignId: 101,
        };
        const rawResponseBody = {
            phoneNumbers: [
                { phoneNumber: "+14155550123", campaign: { id: 101, name: "Summer Promo", type: "TOLL_FREE" } },
                { phoneNumber: "+14155559876", campaign: { id: 102, name: "Winter Blast", type: "TOLL_FREE" } },
            ],
            failed: [
                {
                    number: "+14155550111",
                    error: "Number is not available. Make sure your team owns this number and it is not a sandbox number.",
                },
            ],
        };
        server
            .mockEndpoint()
            .post("/phone-numbers/attach-campaign")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.phoneNumbers.campaign.attach({
            phones: ["+14155550123", "+14155559876", "+14155550111"],
            campaignType: "TOLL_FREE",
            campaignId: 101,
        });
        expect(response).toEqual({
            phoneNumbers: [
                {
                    phoneNumber: "+14155550123",
                    campaign: {
                        id: 101,
                        name: "Summer Promo",
                        type: "TOLL_FREE",
                    },
                },
                {
                    phoneNumber: "+14155559876",
                    campaign: {
                        id: 102,
                        name: "Winter Blast",
                        type: "TOLL_FREE",
                    },
                },
            ],
            failed: [
                {
                    number: "+14155550111",
                    error: "Number is not available. Make sure your team owns this number and it is not a sandbox number.",
                },
            ],
        });
    });

    test("detach", async () => {
        const server = mockServerPool.createServer();
        const client = new PinnacleClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { phones: ["+14155559876", "14155550111"] };
        const rawResponseBody = {
            phoneNumbers: [
                { phoneNumber: "+14155559876", campaign: { id: 101, name: "Summer Promo", type: "TOLL_FREE" } },
            ],
            failed: [
                {
                    number: "+14155550111",
                    error: "Number is not available. Make sure your team owns this number and it is not a sandbox number.",
                },
            ],
        };
        server
            .mockEndpoint()
            .delete("/phone-numbers/detach-campaign")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.phoneNumbers.campaign.detach({
            phones: ["+14155559876", "14155550111"],
        });
        expect(response).toEqual({
            phoneNumbers: [
                {
                    phoneNumber: "+14155559876",
                    campaign: {
                        id: 101,
                        name: "Summer Promo",
                        type: "TOLL_FREE",
                    },
                },
            ],
            failed: [
                {
                    number: "+14155550111",
                    error: "Number is not available. Make sure your team owns this number and it is not a sandbox number.",
                },
            ],
        });
    });
});
