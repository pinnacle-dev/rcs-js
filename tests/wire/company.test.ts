/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../mock-server/MockServerPool";
import { PinnacleClient } from "../../src/Client";

describe("Company", () => {
    test("get", async () => {
        const server = mockServerPool.createServer();
        const client = new PinnacleClient({ apiKey: "test", environment: server.baseUrl });

        const rawResponseBody = [
            {
                id: 12,
                createdAt: "2024-10-04T03:24:56Z",
                name: "Test Company",
                category: "Entertainment",
                address: "123 Test St",
                ein: "123456789",
                description: "Test Description",
                brandColor: "#000000",
                logoUrl: "https://www.google.com",
                heroUrl: "https://www.google.com",
                primaryWebsiteUrl: "https://www.testcompany.com",
                primaryWebsiteLabel: "Test Website",
                primaryPhone: "+12345678901",
                primaryPhoneLabel: "Test Phone",
                primaryEmail: "test@testcompany.com",
                primaryEmailLabel: "Test Email",
                privacyPolicyUrl: "https://www.testcompany.com/privacy",
                tosUrl: "https://www.testcompany.com/tos",
                pocName: "Test Name2",
                pocTitle: "Test Title2",
                pocEmail: "test@name2.com",
                optIn: "By opting in, you agree to receive messages from Pinnacle, including updates and promotions. Reply “STOP” to unsubscribe. Standard message and data rates may apply.",
                optOut: "Reply with keywords like STOP or UNSUBSCRIBE to opt-out. A confirmation message will be sent, and no further messages will be received unless you re-subscribe.",
                optOutKeywords: ["STOP", "UNSUBSCRIBE"],
                agentUseCase:
                    "Pinnacle’s agent assists with product updates, promotions, order tracking, and support. It answers FAQs, provides order updates, and helps with opt-in/out processes. Escalates to live support when needed.",
                expectedAgentResponses:
                    "General Inquiry: “How can I assist you today?”\nOrder Status: “Provide your order number.”\nOpt-In: “You’re now subscribed!”\nOpt-Out: “You have unsubscribed.”\nEscalation: “Connecting to a live agent.”\n",
                testNumbers: ["+12345678901"],
                status: "pending",
                additionalWebsites: [{ url: "https://www.testcompany.com", label: "Test Website" }],
                additionalEmails: [{ email: "ttt@gmail.com", label: "Test Email" }],
                additionalPhoneNumbers: [{ label: "Test Phone", phone: "+12345678901" }],
            },
        ];
        server.mockEndpoint().get("/company").respondWith().statusCode(200).jsonBody(rawResponseBody).build();

        const response = await client.company.get();
        expect(response).toEqual([
            {
                id: 12,
                createdAt: "2024-10-04T03:24:56Z",
                name: "Test Company",
                category: "Entertainment",
                address: "123 Test St",
                ein: "123456789",
                description: "Test Description",
                brandColor: "#000000",
                logoUrl: "https://www.google.com",
                heroUrl: "https://www.google.com",
                primaryWebsiteUrl: "https://www.testcompany.com",
                primaryWebsiteLabel: "Test Website",
                primaryPhone: "+12345678901",
                primaryPhoneLabel: "Test Phone",
                primaryEmail: "test@testcompany.com",
                primaryEmailLabel: "Test Email",
                privacyPolicyUrl: "https://www.testcompany.com/privacy",
                tosUrl: "https://www.testcompany.com/tos",
                pocName: "Test Name2",
                pocTitle: "Test Title2",
                pocEmail: "test@name2.com",
                optIn: "By opting in, you agree to receive messages from Pinnacle, including updates and promotions. Reply \u201CSTOP\u201D to unsubscribe. Standard message and data rates may apply.",
                optOut: "Reply with keywords like STOP or UNSUBSCRIBE to opt-out. A confirmation message will be sent, and no further messages will be received unless you re-subscribe.",
                optOutKeywords: ["STOP", "UNSUBSCRIBE"],
                agentUseCase:
                    "Pinnacle\u2019s agent assists with product updates, promotions, order tracking, and support. It answers FAQs, provides order updates, and helps with opt-in/out processes. Escalates to live support when needed.",
                expectedAgentResponses:
                    "General Inquiry: \u201CHow can I assist you today?\u201D\nOrder Status: \u201CProvide your order number.\u201D\nOpt-In: \u201CYou\u2019re now subscribed!\u201D\nOpt-Out: \u201CYou have unsubscribed.\u201D\nEscalation: \u201CConnecting to a live agent.\u201D\n",
                testNumbers: ["+12345678901"],
                status: "pending",
                additionalWebsites: [
                    {
                        url: "https://www.testcompany.com",
                        label: "Test Website",
                    },
                ],
                additionalEmails: [
                    {
                        email: "ttt@gmail.com",
                        label: "Test Email",
                    },
                ],
                additionalPhoneNumbers: [
                    {
                        label: "Test Phone",
                        phone: "+12345678901",
                    },
                ],
            },
        ]);
    });

    test("register", async () => {
        const server = mockServerPool.createServer();
        const client = new PinnacleClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { companyId: "companyId" };
        const rawResponseBody = { brand: { name: "Test Company", id: 36 } };
        server
            .mockEndpoint()
            .post("/company/register")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.company.register({
            companyId: "companyId",
        });
        expect(response).toEqual({
            brand: {
                name: "Test Company",
                id: 36,
            },
        });
    });

    test("update", async () => {
        const server = mockServerPool.createServer();
        const client = new PinnacleClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {};
        const rawResponseBody = { brand: { name: "Test Company", id: 36 } };
        server
            .mockEndpoint()
            .post("/company/update")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.company.update();
        expect(response).toEqual({
            brand: {
                name: "Test Company",
                id: 36,
            },
        });
    });
});
