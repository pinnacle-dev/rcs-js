/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { PinnacleClient } from "../../../src/Client";

describe("Rcs", () => {
    test("send", async () => {
        const server = mockServerPool.createServer();
        const client = new PinnacleClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = {
            quickReplies: [{ payload: "payload", title: "title", type: "openUrl" }],
            text: "Check out our website for more information!",
            from: "agent_pinnacle",
            to: "+14154746461",
        };
        const rawResponseBody = {
            messageIds: 1.1,
            segments: 1,
            totalCost: 1.1,
            sender: "sender",
            recipient: "recipient",
            status: "queued",
        };
        server
            .mockEndpoint()
            .post("/messages/send/rcs")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.messages.rcs.send({
            quickReplies: [
                {
                    type: "openUrl",
                    payload: "payload",
                    title: "title",
                },
            ],
            text: "Check out our website for more information!",
            from: "agent_pinnacle",
            to: "+14154746461",
        });
        expect(response).toEqual({
            messageIds: 1.1,
            segments: 1,
            totalCost: 1.1,
            sender: "sender",
            recipient: "recipient",
            status: "queued",
        });
    });
});
