/**
 * This file was auto-generated by Fern from our API Definition.
 */

import { mockServerPool } from "../../mock-server/MockServerPool";
import { PinnacleClient } from "../../../src/Client";

describe("Sms", () => {
    test("send", async () => {
        const server = mockServerPool.createServer();
        const client = new PinnacleClient({ apiKey: "test", environment: server.baseUrl });
        const rawRequestBody = { from: "+14155164736", text: "Hey! ðŸ˜‚", to: "+14154746461" };
        const rawResponseBody = {
            messageId: 123,
            segments: { count: 1, encoding: "gsm7" },
            totalCost: 10,
            sender: "+14155164736",
            recipient: "+14154746461",
            status: "queued",
        };
        server
            .mockEndpoint()
            .post("/messages/send/sms")
            .jsonBody(rawRequestBody)
            .respondWith()
            .statusCode(200)
            .jsonBody(rawResponseBody)
            .build();

        const response = await client.messages.sms.send({
            from: "+14155164736",
            text: "Hey! \uD83D\uDE02",
            to: "+14154746461",
        });
        expect(response).toEqual({
            messageId: 123,
            segments: {
                count: 1,
                encoding: "gsm7",
            },
            totalCost: 10,
            sender: "+14155164736",
            recipient: "+14154746461",
            status: "queued",
        });
    });
});
